---
title: "Lab: Web Scraping and RSS"
author: "Your Name Here"
format: html
number-sections: true
number-depth: 3
---

The Securities and Exchange Commission (SEC) provides a way to see the most recent filings submitted to the commission at [https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent](https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent). 

Form 144 is required to be submitted when an executive officer, director, or affiliate of the company sells more than 5000 shares of stock or the aggregate sales price exceeds $50,000. 

Conveniently, we can access the 100 most recent Form 144 filings by using the [RSS feed](https://www.sec.gov/cgi-bin/browse-edgar?action=getcurrent&CIK=&type=&company=&dateb=&owner=include&start=0&count=100&output=atom), which provides some basic information about each filing as well as a link to the filing's database entry. 
An example of the RSS feed downloaded on July 28, 2025 is provided in the [`sample-feed.rss`](sample-feed.rss) file for demonstration purposes. 

RSS feeds are just another XML-like file, as you can see from the [RSS2.0 Specification](https://www.rssboard.org/rss-specification). 

::: callout
You can see the purpose of this assignment as well as the skills and knowledge you should be using and acquiring, in the [Transparency in Learning and Teaching](tilt.qmd) document in this repository.
:::

# Warming Up

## Parsing the File

Add a code chunk that will read in the RSS feed as an XML file.

---


## Extracting Information {#sec-extract-info}

Add a code chunk that will convert each entry into a data frame row with columns `title`, `link`, `summary`, `updated`, `category`, and `id`. 
Note that you may need to access attributes to get the important data out of some nodes, while for others you may only need to access the content.

Show the first 5 and last 5 rows of your data, using a function like `knitr::kable`, `DT::DT`, or `IPython`'s `display()` and `Markdown()`. See [this page](https://www.datanovia.com/guide/tools/quarto/tables.html#computations) for more information about rendering  "pretty" tabular data using quarto. 

---

## Is it XML?

Is an RSS feed actually an XML file? Why or why not? What requirements of an XML file does an RSS feed meet, and what requirements are lacking?

---


# Cleaning the Data

The data frame you created in @sec-extract-info is not exactly in tidy form. Let's see if we can fix that!

## Tidy Data

What aspects of the data frame need work in order to meet the criteria for tidy data?

---

## Tidy Planning

Write a step-by-step plan to convert your data into tidy form.

---

## Tidying, for real!

Execute your step-by-step plan. Show a nicely formatted data table with up to 10 entries, and explain why your data is now tidy. 

---

# Filing Forms

The RSS feed provides bare-bones data about SEC filings, but also links to the actual forms. 
The `link` column of your data should contain a URI for the form which was actually filed. 
Let's work on pulling out the form data, with the idea that we might want to analyze SEC filing data.

For instance, the following entry describes a tractor supply filing. 

```
<entry>
<title>144 - TRACTOR SUPPLY CO /DE/ (0000916365) (Subject)</title>
<link rel="alternate" type="text/html" href="https://www.sec.gov/Archives/edgar/data/916365/000195917325004774/0001959173-25-004774-index.htm"/>
<summary type="html">
 &lt;b&gt;Filed:&lt;/b&gt; 2025-07-28 &lt;b&gt;AccNo:&lt;/b&gt; 0001959173-25-004774 &lt;b&gt;Size:&lt;/b&gt; 4 KB
</summary>
<updated>2025-07-28T14:07:13-04:00</updated>
<category scheme="https://www.sec.gov/" label="form type" term="144"/>
<id>urn:tag:sec.gov,2008:accession-number=0001959173-25-004774</id>
</entry>
```

The link URL is [`https://www.sec.gov/Archives/edgar/data/916365/000195917325004774/0001959173-25-004774-index.htm`](https://www.sec.gov/Archives/edgar/data/916365/000195917325004774/0001959173-25-004774-index.htm). On the linked page, there is a table of document format files which contains the same information in HTM(L), XML, and TXT format. 

## Preparing

Open one link from your table and examine the HTML page. 


1. Identify the CSS selector you believe would be most efficient to obtain the **table** of document format files.

> Your answer here

2. Identify the CSS selector you believe would be most efficient for obtaining the first link in the table of document format files.

> Your answer here

## Reading HTML Tables

Write a function that takes a URI to the Filing Detail page and extracts the link for the document corresponding to the filing entry (I recommend going for the .htm link).

Use your function to obtain the filed forms for all of the links in your RSS feed.
---

## Reading HTML Pages

Use the links to the filed forms and extract the following information from each page:

- Name, SEC File Number, Address, and Phone Number of Issuer
- Name of person selling the securities, and relationship to the Issuer
- Securities Information: all values in the table
- Securities to be Sold: all values in the table
- Other sales in the last 3 months, if any
- Notice date

You may want to write one or more functions to extract the necessary data, with error handling in order to ensure that if the data does not exist the function still returns the information that is available.


---


## Assessing Market Value of Stock Sales


Make a histogram of the aggregate market value of stock to be sold for the entries in your RSS feed. Make sure your plot has descriptive titles, axis labels, and uses appropriate scales. 

---

## Efficiency

Imagine you'd saved the RSS feed from the SEC for the past 30 days. 
The SEC may not receive more than 100 form 144 filings each day, and they do not update the feed on federal holidays or weekends. 

Describe how you would approach generating a database of the unique form 144 filings over all 30 days of RSS feed files. Make an ordered list of steps indicating the order in which you would read in the RSS entries, acquire the corresponding data from the SEC filing form, and deduplicating the potentially repeated filings, along with any other intermediate steps you might take.

Your solution should minimize the amount of load on the SEC's server for both efficiency and politeness' sake. 

---
